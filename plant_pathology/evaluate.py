# AUTOGENERATED! DO NOT EDIT! File to edit: nbks/02_evaluate.ipynb (unless otherwise specified).

__all__ = ['infer_on_test_set', 'format_submission', 'evaluate']

# Cell
from fastai.vision.all import *
from typing import *

# Cell
def infer_on_test_set(learn: Learner, tta: bool=False, path_test: Path=Path("/home/brandon/projects/plant_pathology/data/test.csv")) -> Tensor:
    df_test = pd.read_csv(path_test)
    test_dl = learn.dls.test_dl(df_test)
    preds, _ = (learn.tta if tta else learn.get_preds)(dl=test_dl)
    return preds

# Cell
def format_submission(preds: Tensor, save_path: Union[Path, str], path_data: Path=Path("/home/brandon/projects/plant_pathology/data")) -> Path:
    submission = pd.read_csv(path_data/"sample_submission.csv")

    # Update cols with preds
    submission["healthy"] = preds[:, 0]
    submission["multiple_diseases"] = preds[:, 1]
    submission["rust"] = preds[:, 2]
    submission["scab"] = preds[:, 3]

    # Make parent dirs
    save_path = Path(save_path)
    Path(save_path.parent).mkdir(parents=True, exist_ok=True)
    submission.to_csv(save_path, index=False)
    return save_path

# Cell
def evaluate(learn: Learner, save_path: Union[Path, str]=Path("./submission.csv"), tta: bool=False) -> Path:
    """Takes trained learner, evaluates on test set, formats and saves submission.csv."""
    preds = infer_on_test_set(learn, tta=tta)
    return format_submission(preds, save_path)